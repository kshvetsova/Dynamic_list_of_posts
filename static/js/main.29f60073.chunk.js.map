{"version":3,"sources":["api/api.js","api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["request","url","options","fetch","then","response","json","res","data","getUserPosts","userId","a","result","filter","getPostDetails","postId","Loader","className","PostsList","setPostId","useState","posts","setPosts","useEffect","length","map","post","key","id","title","type","onClick","defaultProps","getPostComments","addComment","option","method","body","JSON","stringify","deleteComment","commentId","postNew","name","email","NewCommentForm","setComments","setPost","handleSubmit","e","preventDefault","handleChange","target","value","item","trimStart","onSubmit","placeholder","onChange","classNames","visible","PostDetails","details","setDetails","comments","hidden","setHidden","comment","App","setValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29f60073.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then(response => response.json())\n    .then(res => res.data)\n);\n","import { request } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const result = await request('posts');\n\n  return result.filter(res => (+userId ? res.userId === +userId : res));\n};\n\nexport const getPostDetails = async(postId) => {\n  const result = await request(`posts/${postId}`);\n\n  return result;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { PropTypes } from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport { Loader } from '../Loader';\n\nexport const PostsList = ({ userId, setPostId, postId }) => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    getUserPosts(userId).then(setPosts);\n  }, [userId]);\n\n  return !posts ? <Loader /> : (\n    <div className=\"PostsList\">\n\n      <h2>{`Posts: ${posts.length}`}</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {postId !== post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setPostId(post.id)}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setPostId(null)}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.string.isRequired,\n  postId: PropTypes.number,\n  setPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  postId: null,\n};\n","import { request } from './api';\n\nexport const getPostComments = async(postId) => {\n  const result = await request(`comments/`);\n\n  return result.filter(res => res.postId === postId);\n};\n\nexport const addComment = async(option) => {\n  await request(`comments/`, {\n    method: 'POST',\n    body: JSON.stringify(option),\n  });\n};\n\nexport const deleteComment = async(commentId) => {\n  await request(`comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport classNames from 'classnames';\nimport { PropTypes } from 'prop-types';\nimport { addComment, getPostComments } from '../../api/comments';\n\nconst postNew = {\n  name: '',\n  email: '',\n  body: '',\n};\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [post, setPost] = useState(postNew);\n  const { name, email, body } = post;\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    if (name && email && body) {\n      await addComment({\n        ...post, postId,\n      });\n      const res = await getPostComments(postId);\n\n      setComments(res);\n      setPost(postNew);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { value, name: item } = e.target;\n\n    setPost({\n      ...post,\n      [item]: value.trimStart(),\n    });\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className={classNames('NewCommentForm__submit-button button', {\n          visible: name && email && body,\n        })}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport classNames from 'classnames';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { Loader } from '../Loader';\n\nexport const PostDetails = ({ postId }) => {\n  const [details, setDetails] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId).then(setDetails);\n    getPostComments(postId).then(setComments);\n  }, [postId]);\n\n  return !comments || !details ? <Loader /> : (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <h3>{details.title}</h3>\n\n      <section className=\"PostDetails__post\">\n        <p>{details.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments && (\n          <button\n            type=\"button\"\n            className={classNames('button', { visible: comments.length > 0 })}\n            onClick={() => setHidden(!hidden)}\n          >\n            {`${!hidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n          </button>\n        )}\n        <ul className=\"PostDetails__list\">\n          {hidden && comments.map(comment => (\n            <li className=\"PostDetails__list-item\" key={comment.id}>\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={async() => {\n                  await deleteComment(comment.id);\n                  getPostComments(postId).then(setComments);\n                }}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} setComments={setComments} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nexport const App = () => {\n  const [value, setValue] = useState('');\n  const [postId, setPostId] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={value}\n            onChange={({ target }) => setValue(target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={value}\n            setPostId={setPostId}\n            postId={postId}\n          />\n        </div>\n        <div className=\"App__content\">\n          {postId && <PostDetails postId={postId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}