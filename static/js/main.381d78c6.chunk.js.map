{"version":3,"sources":["store.js","api/api.js","api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["initialState","posts","postId","userId","details","comments","actions","type","selectors","state","store","createStore","action","request","url","options","fetch","then","response","json","getUserPosts","a","filter","res","getPostDetails","result","Loader","className","PostsList","dispatch","useDispatch","useSelector","useEffect","length","map","post","key","id","title","onClick","getPostComments","addComment","option","method","body","JSON","stringify","deleteComment","commentId","postNew","name","email","NewCommentForm","useState","setPost","handleSubmit","e","preventDefault","handleChange","target","value","item","trimStart","onSubmit","placeholder","pattern","onChange","classNames","visible","PostDetails","hidden","setHidden","comment","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.381d78c6.chunk.js","sourcesContent":["import { legacy_createStore as createStore } from 'redux';\n\nconst initialState = {\n  posts: [],\n  postId: null,\n  userId: 0,\n  details: null,\n  comments: null,\n};\n\nconst SET_POSTS = 'SET_POSTS';\nconst SET_POST_ID = 'SET_POST_ID';\nconst SET_USER_ID = 'SET_USER_ID';\nconst SET_DETAILS = 'SET_DETAILS';\nconst SET_COMMENTS = 'SET_COMENTS';\n\nexport const actions = {\n  setPosts: posts => ({\n    type: SET_POSTS, posts,\n  }),\n  setPostId: postId => ({\n    type: SET_POST_ID, postId,\n  }),\n  setUserId: userId => ({\n    type: SET_USER_ID, userId,\n  }),\n  setDetails: details => ({\n    type: SET_DETAILS, details,\n  }),\n  setComments: comments => ({\n    type: SET_COMMENTS, comments,\n  }),\n};\n\nexport const selectors = {\n  getPosts: state => state.posts,\n  getPostId: state => state.postId,\n  getUserId: state => state.userId,\n  getDetails: state => state.details,\n  getComments: state => state.comments,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    case SET_POST_ID:\n      return {\n        ...state,\n        postId: action.postId,\n      };\n    case SET_USER_ID:\n      return {\n        ...state,\n        userId: action.userId,\n      };\n    case SET_DETAILS:\n      return {\n        ...state,\n        details: action.details,\n      };\n    case SET_COMMENTS:\n      return {\n        ...state,\n        comments: action.comments,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then(response => response.json())\n);\n","import { request } from './api';\n\n// eslint-disable-next-line consistent-return\nexport const getUserPosts = async(userId) => {\n  try {\n    const result = await request('posts');\n\n    result.filter(res => (\n      +userId ? res.userId === +userId : res.userId\n    ));\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const getPostDetails = async(postId) => {\n  const result = await request(`posts/${postId}`);\n\n  return result;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport './PostsList.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions, selectors } from '../../store';\nimport { getUserPosts } from '../../api/posts';\nimport { Loader } from '../Loader';\n\nexport const PostsList = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectors.getPosts);\n  const userId = useSelector(selectors.getUserId);\n  const postId = useSelector(selectors.getPostId);\n\n  useEffect(() => {\n    getUserPosts(userId).then(res => dispatch(actions.setPosts(res)));\n  }, [userId]);\n\n  return posts.length === 0 ? <Loader /> : (\n    <div className=\"PostsList\">\n\n      <h2>{`Posts: ${posts.length}`}</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {postId !== post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => dispatch(actions.setPostId(post.id))}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => dispatch(actions.setPostId(null))}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = async(postId) => {\n  const result = await request(`comments/`);\n\n  return result.filter(res => res.postId === postId);\n};\n\nexport const addComment = async(option) => {\n  await request(`comments/`, {\n    method: 'POST',\n    body: JSON.stringify(option),\n  });\n};\n\nexport const deleteComment = async(commentId) => {\n  await request(`comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { actions, selectors } from '../../store';\nimport './NewCommentForm.scss';\nimport { addComment, getPostComments } from '../../api/comments';\n\nconst postNew = {\n  name: '',\n  email: '',\n  body: '',\n};\n\nexport const NewCommentForm = () => {\n  const dispatch = useDispatch();\n  const postId = useSelector(selectors.getPostId);\n  const [post, setPost] = useState(postNew);\n  const { name, email, body } = post;\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    if (name && email && body) {\n      await addComment({\n        ...post, postId,\n      });\n      const res = await getPostComments(postId);\n\n      dispatch(actions.setComments(res));\n      setPost(postNew);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { value, name: item } = e.target;\n\n    setPost({\n      ...post,\n      [item]: value.trimStart(),\n    });\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          pattern=\"\\w+\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className={classNames('NewCommentForm__submit-button button', {\n          visible: name && email && body,\n        })}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { actions, selectors } from '../../store';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { Loader } from '../Loader';\n\nexport const PostDetails = () => {\n  const details = useSelector(selectors.getDetails);\n  const postId = useSelector(selectors.getPostId);\n  const comments = useSelector(selectors.getComments);\n  const dispatch = useDispatch();\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId).then(res => dispatch(actions.setDetails(res)));\n    getPostComments(postId).then(res => dispatch(actions.setComments(res)));\n  }, [postId]);\n\n  return !comments || !details ? <Loader /> : (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <h3>{details.title}</h3>\n\n      <section className=\"PostDetails__post\">\n        <p>{details.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments && (\n          <button\n            type=\"button\"\n            className={classNames('button', { visible: comments.length > 0 })}\n            onClick={() => setHidden(!hidden)}\n          >\n            {`${!hidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n          </button>\n        )}\n        <ul className=\"PostDetails__list\">\n          {hidden && comments.map(comment => (\n            <li className=\"PostDetails__list-item\" key={comment.id}>\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={async() => {\n                  await deleteComment(comment.id);\n                  getPostComments(postId)\n                    .then(res => dispatch(actions.setComments(res)));\n                }}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions, selectors } from './store';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nexport const App = () => {\n  const userId = useSelector(selectors.getUserId);\n  const dispatch = useDispatch();\n  const postId = useSelector(selectors.getPostId);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={({ target }) => {\n              dispatch(actions.setUserId(target.value));\n              dispatch(actions.setPostId(null));\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList />\n        </div>\n        <div className=\"App__content\">\n          {postId && <PostDetails />}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}