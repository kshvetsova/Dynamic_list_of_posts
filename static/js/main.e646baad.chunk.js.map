{"version":3,"sources":["store.js","api/api.js","api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["initialState","posts","postId","userId","details","comments","setPostId","type","setComments","getPosts","state","getPostId","getUserId","getDetails","getComments","store","createStore","action","request","url","options","fetch","then","response","json","getUserPosts","a","result","filter","res","getPostDetails","Loader","className","PostsList","dispatch","useDispatch","useSelector","useEffect","setPosts","length","map","post","key","id","title","onClick","getPostComments","addComment","option","method","body","JSON","stringify","deleteComment","commentId","postNew","name","email","NewCommentForm","useState","setPost","handleSubmit","e","preventDefault","handleChange","target","value","item","trimStart","onSubmit","placeholder","pattern","onChange","classNames","visible","PostDetails","hidden","setHidden","setDetails","comment","App","setUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e646baad.chunk.js","sourcesContent":["import { legacy_createStore as createStore } from 'redux';\n\nconst initialState = {\n  posts: [],\n  postId: null,\n  userId: 0,\n  details: null,\n  comments: null,\n};\n\nconst SET_POSTS = 'SET_POSTS';\nconst SET_POST_ID = 'SET_POST_ID';\nconst SET_USER_ID = 'SET_USER_ID';\nconst SET_DETAILS = 'SET_DETAILS';\nconst SET_COMMENTS = 'SET_COMENTS';\n\nexport const setPosts = posts => ({\n  type: SET_POSTS, posts,\n});\nexport const setPostId = postId => ({\n  type: SET_POST_ID, postId,\n});\nexport const setUserId = userId => ({\n  type: SET_USER_ID, userId,\n});\nexport const setDetails = details => ({\n  type: SET_DETAILS, details,\n});\nexport const setComments = comments => ({\n  type: SET_COMMENTS, comments,\n});\n\nexport const getPosts = state => state.posts;\nexport const getPostId = state => state.postId;\nexport const getUserId = state => state.userId;\nexport const getDetails = state => state.details;\nexport const getComments = state => state.comments;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    case SET_POST_ID:\n      return {\n        ...state,\n        postId: action.postId,\n      };\n    case SET_USER_ID:\n      return {\n        ...state,\n        userId: action.userId,\n      };\n    case SET_DETAILS:\n      return {\n        ...state,\n        details: action.details,\n      };\n    case SET_COMMENTS:\n      return {\n        ...state,\n        comments: action.comments,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then(response => response.json())\n);\n","import { request } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const result = await request('posts');\n\n  return result.filter(res => (\n    +userId ? res.userId === +userId : res.userId\n  ));\n};\n\nexport const getPostDetails = async(postId) => {\n  const result = await request(`posts/${postId}`);\n\n  return result;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport './PostsList.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setPosts,\n  setPostId,\n  getPosts,\n  getPostId,\n  getUserId,\n} from '../../store';\nimport { getUserPosts } from '../../api/posts';\nimport { Loader } from '../Loader';\n\nexport const PostsList = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(getPosts);\n  const userId = useSelector(getUserId);\n  const postId = useSelector(getPostId);\n\n  useEffect(() => {\n    getUserPosts(userId).then(res => dispatch(setPosts(res)));\n  }, [userId]);\n\n  return !posts ? <Loader /> : (\n    <div className=\"PostsList\">\n\n      <h2>{`Posts: ${posts.length}`}</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {postId !== post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => dispatch(setPostId(post.id))}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => dispatch(setPostId(null))}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = async(postId) => {\n  const result = await request(`comments/`);\n\n  return result.filter(res => res.postId === postId);\n};\n\nexport const addComment = async(option) => {\n  await request(`comments/`, {\n    method: 'POST',\n    body: JSON.stringify(option),\n  });\n};\n\nexport const deleteComment = async(commentId) => {\n  await request(`comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { setComments, getPostId } from '../../store';\nimport './NewCommentForm.scss';\nimport { addComment, getPostComments } from '../../api/comments';\n\nconst postNew = {\n  name: '',\n  email: '',\n  body: '',\n};\n\nexport const NewCommentForm = () => {\n  const dispatch = useDispatch();\n  const postId = useSelector(getPostId);\n  const [post, setPost] = useState(postNew);\n  const { name, email, body } = post;\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    if (name && email && body) {\n      await addComment({\n        ...post, postId,\n      });\n      const res = await getPostComments(postId);\n\n      dispatch(setComments(res));\n      setPost(postNew);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { value, name: item } = e.target;\n\n    setPost({\n      ...post,\n      [item]: value.trimStart(),\n    });\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          pattern=\"\\w+\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className={classNames('NewCommentForm__submit-button button', {\n          visible: name && email && body,\n        })}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport {\n  getDetails,\n  setDetails,\n  getPostId,\n  getComments,\n  setComments,\n} from '../../store';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { Loader } from '../Loader';\n\nexport const PostDetails = () => {\n  const details = useSelector(getDetails);\n  const postId = useSelector(getPostId);\n  const comments = useSelector(getComments);\n  const dispatch = useDispatch();\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId).then(res => dispatch(setDetails(res)));\n    getPostComments(postId).then(res => dispatch(setComments(res)));\n  }, [postId]);\n\n  return !comments || !details ? <Loader /> : (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <h3>{details.title}</h3>\n\n      <section className=\"PostDetails__post\">\n        <p>{details.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments && (\n          <button\n            type=\"button\"\n            className={classNames('button', { visible: comments.length > 0 })}\n            onClick={() => setHidden(!hidden)}\n          >\n            {`${!hidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n          </button>\n        )}\n        <ul className=\"PostDetails__list\">\n          {hidden && comments.map(comment => (\n            <li className=\"PostDetails__list-item\" key={comment.id}>\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={async() => {\n                  await deleteComment(comment.id);\n                  getPostComments(postId)\n                    .then(res => dispatch(setComments(res)));\n                }}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPostId, getUserId, setUserId, setPostId } from './store';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nexport const App = () => {\n  const userId = useSelector(getUserId);\n  const dispatch = useDispatch();\n  const postId = useSelector(getPostId);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={({ target }) => {\n              dispatch(setUserId(target.value));\n              dispatch(setPostId(null));\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList />\n        </div>\n        <div className=\"App__content\">\n          {postId && <PostDetails />}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}